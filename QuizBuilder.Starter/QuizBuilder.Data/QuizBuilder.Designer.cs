//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuestionQuestionOption", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.Question), "QuestionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuestionOption), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuestionResponses_QuestionOptions", "QuestionOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(QuizBuilder.Data.QuestionOption), "QuestionResponses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuestionResponse), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuestionResponses_Questions", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.Question), "QuestionResponses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuestionResponse), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuestionResponses_QuizAttempts", "QuizAttempts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.QuizAttempt), "QuestionResponses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuestionResponse), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_ScenarioQuestion", "Scenarios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.Scenario), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.Question), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuizUserQuiz", "Quizzes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.Quiz), "QuizAttempts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuizAttempt), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_UserUserQuiz", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.User), "QuizAttempts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.QuizAttempt), true)]
[assembly: EdmRelationshipAttribute("QuizBuilderModel", "FK_QuizScenario", "Quizzes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(QuizBuilder.Data.Quiz), "Scenarios", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(QuizBuilder.Data.Scenario), true)]

#endregion

namespace QuizBuilder.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class QuizBuilderEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new QuizBuilderEntities object using the connection string found in the 'QuizBuilderEntities' section of the application configuration file.
        /// </summary>
        public QuizBuilderEntities() : base("name=QuizBuilderEntities", "QuizBuilderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QuizBuilderEntities object.
        /// </summary>
        public QuizBuilderEntities(string connectionString) : base(connectionString, "QuizBuilderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QuizBuilderEntities object.
        /// </summary>
        public QuizBuilderEntities(EntityConnection connection) : base(connection, "QuizBuilderEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionOption> QuestionOptions
        {
            get
            {
                if ((_QuestionOptions == null))
                {
                    _QuestionOptions = base.CreateObjectSet<QuestionOption>("QuestionOptions");
                }
                return _QuestionOptions;
            }
        }
        private ObjectSet<QuestionOption> _QuestionOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionResponse> QuestionResponses
        {
            get
            {
                if ((_QuestionResponses == null))
                {
                    _QuestionResponses = base.CreateObjectSet<QuestionResponse>("QuestionResponses");
                }
                return _QuestionResponses;
            }
        }
        private ObjectSet<QuestionResponse> _QuestionResponses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuizAttempt> QuizAttempts
        {
            get
            {
                if ((_QuizAttempts == null))
                {
                    _QuizAttempts = base.CreateObjectSet<QuizAttempt>("QuizAttempts");
                }
                return _QuizAttempts;
            }
        }
        private ObjectSet<QuizAttempt> _QuizAttempts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quiz> Quizzes
        {
            get
            {
                if ((_Quizzes == null))
                {
                    _Quizzes = base.CreateObjectSet<Quiz>("Quizzes");
                }
                return _Quizzes;
            }
        }
        private ObjectSet<Quiz> _Quizzes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Scenario> Scenarios
        {
            get
            {
                if ((_Scenarios == null))
                {
                    _Scenarios = base.CreateObjectSet<Scenario>("Scenarios");
                }
                return _Scenarios;
            }
        }
        private ObjectSet<Scenario> _Scenarios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionOptions(QuestionOption questionOption)
        {
            base.AddObject("QuestionOptions", questionOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionResponses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionResponses(QuestionResponse questionResponse)
        {
            base.AddObject("QuestionResponses", questionResponse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuizAttempts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuizAttempts(QuizAttempt quizAttempt)
        {
            base.AddObject("QuizAttempts", quizAttempt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quizzes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuizzes(Quiz quiz)
        {
            base.AddObject("Quizzes", quiz);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scenarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScenarios(Scenario scenario)
        {
            base.AddObject("Scenarios", scenario);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="scenarioID">Initial value of the ScenarioID property.</param>
        /// <param name="questionSequence">Initial value of the QuestionSequence property.</param>
        /// <param name="questionText">Initial value of the QuestionText property.</param>
        /// <param name="isRichText">Initial value of the isRichText property.</param>
        public static Question CreateQuestion(global::System.Int32 questionID, global::System.Int32 scenarioID, global::System.Int32 questionSequence, global::System.String questionText, global::System.Boolean isRichText)
        {
            Question question = new Question();
            question.QuestionID = questionID;
            question.ScenarioID = scenarioID;
            question.QuestionSequence = questionSequence;
            question.QuestionText = questionText;
            question.isRichText = isRichText;
            return question;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                if (_QuestionID != value)
                {
                    OnQuestionIDChanging(value);
                    ReportPropertyChanging("QuestionID");
                    _QuestionID = StructuralObject.SetValidValue(value, "QuestionID");
                    ReportPropertyChanged("QuestionID");
                    OnQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioID
        {
            get
            {
                return _ScenarioID;
            }
            set
            {
                OnScenarioIDChanging(value);
                ReportPropertyChanging("ScenarioID");
                _ScenarioID = StructuralObject.SetValidValue(value, "ScenarioID");
                ReportPropertyChanged("ScenarioID");
                OnScenarioIDChanged();
            }
        }
        private global::System.Int32 _ScenarioID;
        partial void OnScenarioIDChanging(global::System.Int32 value);
        partial void OnScenarioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionSequence
        {
            get
            {
                return _QuestionSequence;
            }
            set
            {
                OnQuestionSequenceChanging(value);
                ReportPropertyChanging("QuestionSequence");
                _QuestionSequence = StructuralObject.SetValidValue(value, "QuestionSequence");
                ReportPropertyChanged("QuestionSequence");
                OnQuestionSequenceChanged();
            }
        }
        private global::System.Int32 _QuestionSequence;
        partial void OnQuestionSequenceChanging(global::System.Int32 value);
        partial void OnQuestionSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuestionText
        {
            get
            {
                return _QuestionText;
            }
            set
            {
                OnQuestionTextChanging(value);
                ReportPropertyChanging("QuestionText");
                _QuestionText = StructuralObject.SetValidValue(value, false, "QuestionText");
                ReportPropertyChanged("QuestionText");
                OnQuestionTextChanged();
            }
        }
        private global::System.String _QuestionText;
        partial void OnQuestionTextChanging(global::System.String value);
        partial void OnQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isRichText
        {
            get
            {
                return _isRichText;
            }
            set
            {
                OnisRichTextChanging(value);
                ReportPropertyChanging("isRichText");
                _isRichText = StructuralObject.SetValidValue(value, "isRichText");
                ReportPropertyChanged("isRichText");
                OnisRichTextChanged();
            }
        }
        private global::System.Boolean _isRichText;
        partial void OnisRichTextChanging(global::System.Boolean value);
        partial void OnisRichTextChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionQuestionOption", "QuestionOptions")]
        public EntityCollection<QuestionOption> QuestionOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionOption>("QuizBuilderModel.FK_QuestionQuestionOption", "QuestionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionOption>("QuizBuilderModel.FK_QuestionQuestionOption", "QuestionOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_Questions", "QuestionResponses")]
        public EntityCollection<QuestionResponse> QuestionResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_Questions", "QuestionResponses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_Questions", "QuestionResponses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_ScenarioQuestion", "Scenarios")]
        public Scenario Scenario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scenario>("QuizBuilderModel.FK_ScenarioQuestion", "Scenarios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scenario>("QuizBuilderModel.FK_ScenarioQuestion", "Scenarios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Scenario> ScenarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scenario>("QuizBuilderModel.FK_ScenarioQuestion", "Scenarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Scenario>("QuizBuilderModel.FK_ScenarioQuestion", "Scenarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="QuestionOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionOption object.
        /// </summary>
        /// <param name="questionOptionID">Initial value of the QuestionOptionID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="optionSequence">Initial value of the OptionSequence property.</param>
        /// <param name="optionText">Initial value of the OptionText property.</param>
        /// <param name="isRichText">Initial value of the IsRichText property.</param>
        /// <param name="isCorrect">Initial value of the IsCorrect property.</param>
        public static QuestionOption CreateQuestionOption(global::System.Int32 questionOptionID, global::System.Int32 questionID, global::System.Int32 optionSequence, global::System.String optionText, global::System.Boolean isRichText, global::System.Boolean isCorrect)
        {
            QuestionOption questionOption = new QuestionOption();
            questionOption.QuestionOptionID = questionOptionID;
            questionOption.QuestionID = questionID;
            questionOption.OptionSequence = optionSequence;
            questionOption.OptionText = optionText;
            questionOption.IsRichText = isRichText;
            questionOption.IsCorrect = isCorrect;
            return questionOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionOptionID
        {
            get
            {
                return _QuestionOptionID;
            }
            set
            {
                if (_QuestionOptionID != value)
                {
                    OnQuestionOptionIDChanging(value);
                    ReportPropertyChanging("QuestionOptionID");
                    _QuestionOptionID = StructuralObject.SetValidValue(value, "QuestionOptionID");
                    ReportPropertyChanged("QuestionOptionID");
                    OnQuestionOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionOptionID;
        partial void OnQuestionOptionIDChanging(global::System.Int32 value);
        partial void OnQuestionOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value, "QuestionID");
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionSequence
        {
            get
            {
                return _OptionSequence;
            }
            set
            {
                OnOptionSequenceChanging(value);
                ReportPropertyChanging("OptionSequence");
                _OptionSequence = StructuralObject.SetValidValue(value, "OptionSequence");
                ReportPropertyChanged("OptionSequence");
                OnOptionSequenceChanged();
            }
        }
        private global::System.Int32 _OptionSequence;
        partial void OnOptionSequenceChanging(global::System.Int32 value);
        partial void OnOptionSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionText
        {
            get
            {
                return _OptionText;
            }
            set
            {
                OnOptionTextChanging(value);
                ReportPropertyChanging("OptionText");
                _OptionText = StructuralObject.SetValidValue(value, false, "OptionText");
                ReportPropertyChanged("OptionText");
                OnOptionTextChanged();
            }
        }
        private global::System.String _OptionText;
        partial void OnOptionTextChanging(global::System.String value);
        partial void OnOptionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRichText
        {
            get
            {
                return _IsRichText;
            }
            set
            {
                OnIsRichTextChanging(value);
                ReportPropertyChanging("IsRichText");
                _IsRichText = StructuralObject.SetValidValue(value, "IsRichText");
                ReportPropertyChanged("IsRichText");
                OnIsRichTextChanged();
            }
        }
        private global::System.Boolean _IsRichText;
        partial void OnIsRichTextChanging(global::System.Boolean value);
        partial void OnIsRichTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value, "IsCorrect");
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private global::System.Boolean _IsCorrect;
        partial void OnIsCorrectChanging(global::System.Boolean value);
        partial void OnIsCorrectChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionQuestionOption", "Questions")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionQuestionOption", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionQuestionOption", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionQuestionOption", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("QuizBuilderModel.FK_QuestionQuestionOption", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_QuestionOptions", "QuestionResponses")]
        public EntityCollection<QuestionResponse> QuestionResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionResponses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionResponses", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="QuestionResponse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionResponse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionResponse object.
        /// </summary>
        /// <param name="questionResponseID">Initial value of the QuestionResponseID property.</param>
        /// <param name="quizAttemptID">Initial value of the QuizAttemptID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="isCorrect">Initial value of the IsCorrect property.</param>
        /// <param name="userReviewFlag">Initial value of the UserReviewFlag property.</param>
        public static QuestionResponse CreateQuestionResponse(global::System.Int32 questionResponseID, global::System.Int32 quizAttemptID, global::System.Int32 questionID, global::System.Boolean isCorrect, global::System.Boolean userReviewFlag)
        {
            QuestionResponse questionResponse = new QuestionResponse();
            questionResponse.QuestionResponseID = questionResponseID;
            questionResponse.QuizAttemptID = quizAttemptID;
            questionResponse.QuestionID = questionID;
            questionResponse.IsCorrect = isCorrect;
            questionResponse.UserReviewFlag = userReviewFlag;
            return questionResponse;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionResponseID
        {
            get
            {
                return _QuestionResponseID;
            }
            set
            {
                if (_QuestionResponseID != value)
                {
                    OnQuestionResponseIDChanging(value);
                    ReportPropertyChanging("QuestionResponseID");
                    _QuestionResponseID = StructuralObject.SetValidValue(value, "QuestionResponseID");
                    ReportPropertyChanged("QuestionResponseID");
                    OnQuestionResponseIDChanged();
                }
            }
        }
        private global::System.Int32 _QuestionResponseID;
        partial void OnQuestionResponseIDChanging(global::System.Int32 value);
        partial void OnQuestionResponseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuizAttemptID
        {
            get
            {
                return _QuizAttemptID;
            }
            set
            {
                OnQuizAttemptIDChanging(value);
                ReportPropertyChanging("QuizAttemptID");
                _QuizAttemptID = StructuralObject.SetValidValue(value, "QuizAttemptID");
                ReportPropertyChanged("QuizAttemptID");
                OnQuizAttemptIDChanged();
            }
        }
        private global::System.Int32 _QuizAttemptID;
        partial void OnQuizAttemptIDChanging(global::System.Int32 value);
        partial void OnQuizAttemptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> QuestionOptionID
        {
            get
            {
                return _QuestionOptionID;
            }
            set
            {
                OnQuestionOptionIDChanging(value);
                ReportPropertyChanging("QuestionOptionID");
                _QuestionOptionID = StructuralObject.SetValidValue(value, "QuestionOptionID");
                ReportPropertyChanged("QuestionOptionID");
                OnQuestionOptionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _QuestionOptionID;
        partial void OnQuestionOptionIDChanging(Nullable<global::System.Int32> value);
        partial void OnQuestionOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value, "QuestionID");
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCorrect
        {
            get
            {
                return _IsCorrect;
            }
            set
            {
                OnIsCorrectChanging(value);
                ReportPropertyChanging("IsCorrect");
                _IsCorrect = StructuralObject.SetValidValue(value, "IsCorrect");
                ReportPropertyChanged("IsCorrect");
                OnIsCorrectChanged();
            }
        }
        private global::System.Boolean _IsCorrect;
        partial void OnIsCorrectChanging(global::System.Boolean value);
        partial void OnIsCorrectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UserReviewFlag
        {
            get
            {
                return _UserReviewFlag;
            }
            set
            {
                OnUserReviewFlagChanging(value);
                ReportPropertyChanging("UserReviewFlag");
                _UserReviewFlag = StructuralObject.SetValidValue(value, "UserReviewFlag");
                ReportPropertyChanged("UserReviewFlag");
                OnUserReviewFlagChanged();
            }
        }
        private global::System.Boolean _UserReviewFlag;
        partial void OnUserReviewFlagChanging(global::System.Boolean value);
        partial void OnUserReviewFlagChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_QuestionOptions", "QuestionOptions")]
        public QuestionOption QuestionOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionOption>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionOptions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionOption>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionOptions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionOption> QuestionOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionOption>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionOption>("QuizBuilderModel.FK_QuestionResponses_QuestionOptions", "QuestionOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_Questions", "Questions")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionResponses_Questions", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionResponses_Questions", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("QuizBuilderModel.FK_QuestionResponses_Questions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("QuizBuilderModel.FK_QuestionResponses_Questions", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_QuizAttempts", "QuizAttempts")]
        public QuizAttempt QuizAttempt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuizAttempt>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuizAttempts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuizAttempt>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuizAttempts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuizAttempt> QuizAttemptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuizAttempt>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuizAttempts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuizAttempt>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuizAttempts", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="Quiz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quiz : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quiz object.
        /// </summary>
        /// <param name="quizID">Initial value of the QuizID property.</param>
        /// <param name="quizName">Initial value of the QuizName property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Quiz CreateQuiz(global::System.Int32 quizID, global::System.String quizName, global::System.String title, global::System.String description)
        {
            Quiz quiz = new Quiz();
            quiz.QuizID = quizID;
            quiz.QuizName = quizName;
            quiz.Title = title;
            quiz.Description = description;
            return quiz;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuizID
        {
            get
            {
                return _QuizID;
            }
            set
            {
                if (_QuizID != value)
                {
                    OnQuizIDChanging(value);
                    ReportPropertyChanging("QuizID");
                    _QuizID = StructuralObject.SetValidValue(value, "QuizID");
                    ReportPropertyChanged("QuizID");
                    OnQuizIDChanged();
                }
            }
        }
        private global::System.Int32 _QuizID;
        partial void OnQuizIDChanging(global::System.Int32 value);
        partial void OnQuizIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuizName
        {
            get
            {
                return _QuizName;
            }
            set
            {
                OnQuizNameChanging(value);
                ReportPropertyChanging("QuizName");
                _QuizName = StructuralObject.SetValidValue(value, false, "QuizName");
                ReportPropertyChanged("QuizName");
                OnQuizNameChanged();
            }
        }
        private global::System.String _QuizName;
        partial void OnQuizNameChanging(global::System.String value);
        partial void OnQuizNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuizUserQuiz", "QuizAttempts")]
        public EntityCollection<QuizAttempt> QuizAttempts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuizAttempt>("QuizBuilderModel.FK_QuizUserQuiz", "QuizAttempts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuizAttempt>("QuizBuilderModel.FK_QuizUserQuiz", "QuizAttempts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuizScenario", "Scenarios")]
        public EntityCollection<Scenario> Scenarios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Scenario>("QuizBuilderModel.FK_QuizScenario", "Scenarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Scenario>("QuizBuilderModel.FK_QuizScenario", "Scenarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="QuizAttempt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuizAttempt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuizAttempt object.
        /// </summary>
        /// <param name="quizAttemptID">Initial value of the QuizAttemptID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="quizID">Initial value of the QuizID property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="quizDate">Initial value of the QuizDate property.</param>
        public static QuizAttempt CreateQuizAttempt(global::System.Int32 quizAttemptID, global::System.Int32 userID, global::System.Int32 quizID, global::System.Int32 score, global::System.DateTime quizDate)
        {
            QuizAttempt quizAttempt = new QuizAttempt();
            quizAttempt.QuizAttemptID = quizAttemptID;
            quizAttempt.UserID = userID;
            quizAttempt.QuizID = quizID;
            quizAttempt.Score = score;
            quizAttempt.QuizDate = quizDate;
            return quizAttempt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuizAttemptID
        {
            get
            {
                return _QuizAttemptID;
            }
            set
            {
                if (_QuizAttemptID != value)
                {
                    OnQuizAttemptIDChanging(value);
                    ReportPropertyChanging("QuizAttemptID");
                    _QuizAttemptID = StructuralObject.SetValidValue(value, "QuizAttemptID");
                    ReportPropertyChanged("QuizAttemptID");
                    OnQuizAttemptIDChanged();
                }
            }
        }
        private global::System.Int32 _QuizAttemptID;
        partial void OnQuizAttemptIDChanging(global::System.Int32 value);
        partial void OnQuizAttemptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuizID
        {
            get
            {
                return _QuizID;
            }
            set
            {
                OnQuizIDChanging(value);
                ReportPropertyChanging("QuizID");
                _QuizID = StructuralObject.SetValidValue(value, "QuizID");
                ReportPropertyChanged("QuizID");
                OnQuizIDChanged();
            }
        }
        private global::System.Int32 _QuizID;
        partial void OnQuizIDChanging(global::System.Int32 value);
        partial void OnQuizIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value, "Score");
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime QuizDate
        {
            get
            {
                return _QuizDate;
            }
            set
            {
                OnQuizDateChanging(value);
                ReportPropertyChanging("QuizDate");
                _QuizDate = StructuralObject.SetValidValue(value, "QuizDate");
                ReportPropertyChanged("QuizDate");
                OnQuizDateChanged();
            }
        }
        private global::System.DateTime _QuizDate;
        partial void OnQuizDateChanging(global::System.DateTime value);
        partial void OnQuizDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuestionResponses_QuizAttempts", "QuestionResponses")]
        public EntityCollection<QuestionResponse> QuestionResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuestionResponses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuestionResponse>("QuizBuilderModel.FK_QuestionResponses_QuizAttempts", "QuestionResponses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuizUserQuiz", "Quizzes")]
        public Quiz Quizze
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizUserQuiz", "Quizzes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizUserQuiz", "Quizzes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quiz> QuizzeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizUserQuiz", "Quizzes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quiz>("QuizBuilderModel.FK_QuizUserQuiz", "Quizzes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_UserUserQuiz", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QuizBuilderModel.FK_UserUserQuiz", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QuizBuilderModel.FK_UserUserQuiz", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("QuizBuilderModel.FK_UserUserQuiz", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("QuizBuilderModel.FK_UserUserQuiz", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="Scenario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scenario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Scenario object.
        /// </summary>
        /// <param name="scenarioID">Initial value of the ScenarioID property.</param>
        /// <param name="quizID">Initial value of the QuizID property.</param>
        /// <param name="scenarioSequence">Initial value of the ScenarioSequence property.</param>
        /// <param name="scenarioName">Initial value of the ScenarioName property.</param>
        /// <param name="scenarioText">Initial value of the ScenarioText property.</param>
        /// <param name="isRichText">Initial value of the IsRichText property.</param>
        public static Scenario CreateScenario(global::System.Int32 scenarioID, global::System.Int32 quizID, global::System.Int32 scenarioSequence, global::System.String scenarioName, global::System.String scenarioText, global::System.Boolean isRichText)
        {
            Scenario scenario = new Scenario();
            scenario.ScenarioID = scenarioID;
            scenario.QuizID = quizID;
            scenario.ScenarioSequence = scenarioSequence;
            scenario.ScenarioName = scenarioName;
            scenario.ScenarioText = scenarioText;
            scenario.IsRichText = isRichText;
            return scenario;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioID
        {
            get
            {
                return _ScenarioID;
            }
            set
            {
                if (_ScenarioID != value)
                {
                    OnScenarioIDChanging(value);
                    ReportPropertyChanging("ScenarioID");
                    _ScenarioID = StructuralObject.SetValidValue(value, "ScenarioID");
                    ReportPropertyChanged("ScenarioID");
                    OnScenarioIDChanged();
                }
            }
        }
        private global::System.Int32 _ScenarioID;
        partial void OnScenarioIDChanging(global::System.Int32 value);
        partial void OnScenarioIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuizID
        {
            get
            {
                return _QuizID;
            }
            set
            {
                OnQuizIDChanging(value);
                ReportPropertyChanging("QuizID");
                _QuizID = StructuralObject.SetValidValue(value, "QuizID");
                ReportPropertyChanged("QuizID");
                OnQuizIDChanged();
            }
        }
        private global::System.Int32 _QuizID;
        partial void OnQuizIDChanging(global::System.Int32 value);
        partial void OnQuizIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScenarioSequence
        {
            get
            {
                return _ScenarioSequence;
            }
            set
            {
                OnScenarioSequenceChanging(value);
                ReportPropertyChanging("ScenarioSequence");
                _ScenarioSequence = StructuralObject.SetValidValue(value, "ScenarioSequence");
                ReportPropertyChanged("ScenarioSequence");
                OnScenarioSequenceChanged();
            }
        }
        private global::System.Int32 _ScenarioSequence;
        partial void OnScenarioSequenceChanging(global::System.Int32 value);
        partial void OnScenarioSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioName
        {
            get
            {
                return _ScenarioName;
            }
            set
            {
                OnScenarioNameChanging(value);
                ReportPropertyChanging("ScenarioName");
                _ScenarioName = StructuralObject.SetValidValue(value, false, "ScenarioName");
                ReportPropertyChanged("ScenarioName");
                OnScenarioNameChanged();
            }
        }
        private global::System.String _ScenarioName;
        partial void OnScenarioNameChanging(global::System.String value);
        partial void OnScenarioNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScenarioText
        {
            get
            {
                return _ScenarioText;
            }
            set
            {
                OnScenarioTextChanging(value);
                ReportPropertyChanging("ScenarioText");
                _ScenarioText = StructuralObject.SetValidValue(value, false, "ScenarioText");
                ReportPropertyChanged("ScenarioText");
                OnScenarioTextChanged();
            }
        }
        private global::System.String _ScenarioText;
        partial void OnScenarioTextChanging(global::System.String value);
        partial void OnScenarioTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRichText
        {
            get
            {
                return _IsRichText;
            }
            set
            {
                OnIsRichTextChanging(value);
                ReportPropertyChanging("IsRichText");
                _IsRichText = StructuralObject.SetValidValue(value, "IsRichText");
                ReportPropertyChanged("IsRichText");
                OnIsRichTextChanged();
            }
        }
        private global::System.Boolean _IsRichText;
        partial void OnIsRichTextChanging(global::System.Boolean value);
        partial void OnIsRichTextChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_ScenarioQuestion", "Questions")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("QuizBuilderModel.FK_ScenarioQuestion", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("QuizBuilderModel.FK_ScenarioQuestion", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_QuizScenario", "Quizzes")]
        public Quiz Quizze
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizScenario", "Quizzes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizScenario", "Quizzes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quiz> QuizzeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quiz>("QuizBuilderModel.FK_QuizScenario", "Quizzes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quiz>("QuizBuilderModel.FK_QuizScenario", "Quizzes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QuizBuilderModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isAdmin">Initial value of the IsAdmin property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String firstName, global::System.String lastName, global::System.String userName, global::System.String password, global::System.Boolean isAdmin)
        {
            User user = new User();
            user.UserID = userID;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.UserName = userName;
            user.Password = password;
            user.IsAdmin = isAdmin;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value, "IsAdmin");
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QuizBuilderModel", "FK_UserUserQuiz", "QuizAttempts")]
        public EntityCollection<QuizAttempt> QuizAttempts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<QuizAttempt>("QuizBuilderModel.FK_UserUserQuiz", "QuizAttempts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<QuizAttempt>("QuizBuilderModel.FK_UserUserQuiz", "QuizAttempts", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
